spring.application.name=my-first-backend

server.port=8090

# Driver espec�fico para PostgreSQL
spring.datasource.driver-class-name=org.postgresql.Driver

# URL de conexi�n JDBC para PostgreSQL.
# jdbc:postgresql://[host]:[puerto]/[nombre_de_la_db]
spring.datasource.url=${SPRING_DATASOURCE_URL}

# Usuario y contrase�a para PostgreSQL (usuario por defecto local)
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# Propiedades de JPA (Hibernate) muy �tiles para desarrollo
# Muestra en la consola el SQL que se est� ejecutando.
spring.jpa.show-sql=true
# Hibernate intentar� actualizar el esquema de la BD seg�n tus clases @Entity.
# 'create-drop' crea las tablas al iniciar y las borra al cerrar; �til para desarrollo.
spring.jpa.hibernate.ddl-auto=create-drop
# Especificar el dialecto de PostgreSQL para mejor compatibilidad
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Configuraci�n para ejecutar data.sql autom�ticamente
# 'always' ejecuta el script cada vez que inicia la aplicaci�n
# 'never' (por defecto) no ejecuta el script
spring.sql.init.mode=always

# IMPORTANTE: Esta configuraci�n asegura que data.sql se ejecute DESPU�S
# de que Hibernate cree/actualice las tablas
spring.jpa.defer-datasource-initialization=true